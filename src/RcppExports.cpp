// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// LinvMult
NumericVector LinvMult(NumericMatrix covarray, NumericVector y, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _npspec_LinvMult(SEXP covarraySEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type covarray(covarraySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(LinvMult(covarray, y, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// LinvTransMult
NumericVector LinvTransMult(NumericMatrix covarray, NumericVector z, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _npspec_LinvTransMult(SEXP covarraySEXP, SEXP zSEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type covarray(covarraySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(LinvTransMult(covarray, z, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchiaPrecond
NumericVector vecchiaPrecond(NumericMatrix covarray, NumericVector y, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _npspec_vecchiaPrecond(SEXP covarraySEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type covarray(covarraySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchiaPrecond(covarray, y, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// getLinvEntries
NumericMatrix getLinvEntries(NumericMatrix covarray, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _npspec_getLinvEntries(SEXP covarraySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type covarray(covarraySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(getLinvEntries(covarray, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// LinvTransMultFromEntries
NumericVector LinvTransMultFromEntries(NumericMatrix LinvEntries, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _npspec_LinvTransMultFromEntries(SEXP LinvEntriesSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type LinvEntries(LinvEntriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(LinvTransMultFromEntries(LinvEntries, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// LinvMultFromEntries
NumericVector LinvMultFromEntries(NumericMatrix LinvEntries, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _npspec_LinvMultFromEntries(SEXP LinvEntriesSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type LinvEntries(LinvEntriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(LinvMultFromEntries(LinvEntries, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchiaPrecondFromEntries
NumericVector vecchiaPrecondFromEntries(NumericMatrix LinvEntries, NumericVector y, IntegerMatrix NNarray);
RcppExport SEXP _npspec_vecchiaPrecondFromEntries(SEXP LinvEntriesSEXP, SEXP ySEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type LinvEntries(LinvEntriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchiaPrecondFromEntries(LinvEntries, y, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchiaLik
NumericVector vecchiaLik(NumericMatrix covarray, NumericVector y, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _npspec_vecchiaLik(SEXP covarraySEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type covarray(covarraySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchiaLik(covarray, y, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_npspec_LinvMult", (DL_FUNC) &_npspec_LinvMult, 4},
    {"_npspec_LinvTransMult", (DL_FUNC) &_npspec_LinvTransMult, 4},
    {"_npspec_vecchiaPrecond", (DL_FUNC) &_npspec_vecchiaPrecond, 4},
    {"_npspec_getLinvEntries", (DL_FUNC) &_npspec_getLinvEntries, 3},
    {"_npspec_LinvTransMultFromEntries", (DL_FUNC) &_npspec_LinvTransMultFromEntries, 3},
    {"_npspec_LinvMultFromEntries", (DL_FUNC) &_npspec_LinvMultFromEntries, 3},
    {"_npspec_vecchiaPrecondFromEntries", (DL_FUNC) &_npspec_vecchiaPrecondFromEntries, 3},
    {"_npspec_vecchiaLik", (DL_FUNC) &_npspec_vecchiaLik, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_npspec(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
